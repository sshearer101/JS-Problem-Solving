// Ahoy Matey!

// Welcome to the seven seas.

// You are the captain of a pirate ship.

// You are in battle against the royal navy.

// You have cannons at the ready.... or are they?

// Your task is to check if the gunners are loaded and ready, if they are: Fire!

// If they aren't ready: Shiver me timbers!

// Your gunners for each test case are 2, 3 or 4.

// When you check if they are ready their answers are in a dictionary and will either be: aye or nay

// Firing with less than all gunners ready is non-optimum (this is not fire at will, this is fire by the captain's orders or walk the plank, dirty sea-dog!)

// If all answers are 'aye' then Fire! if one or more are 'nay' then Shiver me timbers!


const cannonsReady = (gunners) => {
 
    const response = Object.values(gunners) 
    
    let amount = 0
    
    for (let x = 0; x<response.length; x++){
      if (response[x] === 'aye'){
        amount++
      }
    }
    return amount === response.length ? "Fire!" : "Shiver me timbers!"
    }


    //alternative 

function cannonsReady(gunners){
        for (let i in gunners) {
            if (gunners[i] == "nay") {
              return "Shiver me timbers!"
            }
        }
      return "Fire!"
    }



    // My washing machine uses water amount of water to wash load (in JavaScript and Python) or max_load (in Ruby) amount of clothes. You are given a clothes amount of clothes to wash. For each single item of clothes above the load, the washing machine will use 10% more water (multiplicative) to clean.

    // For example, if the load is 10, the amount of water it requires is 5 and the amount of clothes to wash is 14, then you need 5 * 1.1 ^ (14 - 10) amount of water.
    
    // Write a function howMuchWater (JS)/how_much_water (Python and Ruby) to work out how much water is needed if you have a clothes amount of clothes. The function will accept 3 arguments: - water, load (or max_loadin Ruby) and clothes.
    
    // My washing machine is an old model that can only handle double the amount of load (or max_load). If the amount of clothes is more than 2 times the standard amount of load (max_load), return 'Too much clothes'. The washing machine also cannot handle any amount of clothes less than load (max_load). If that is the case, return 'Not enough clothes'.
    
    // The answer should be rounded to the nearest 2 decimal places.
    
    

    function howMuchWater(water, load, clothes){

        if (clothes > load * 2){
          return "Too much clothes"
        } else if(clothes < load){
          return "Not enough clothes"
        } else{
          return Number((water * (1.1 **(clothes - load))).toFixed(2))
        }
      }


      //alternative 

      function howMuchWater(water, load, clothes){
        if (clothes/load > 2) return 'Too much clothes'
        if (clothes < load) return 'Not enough clothes'
        return +(water * Math.pow(1.1, (clothes - load))).toFixed(2)
      }


//       You have cultivated a plant, and after months of hard work, the time has come to reap the flowers of your hard work. When it was growing, you added water and fertilizer, and kept a constant temperature. It's time check how much your plant has grown.

// A plant is represented horizontally, from the base to the left, to the end to the right:

// ---@---@---@
// The stem is represented by hyphens -, and the flowers are represented by symbols. A plant always starts with the stem, and always ends with flowers.

// Four parameters will be given. The four parameters are:

// seed (string) - determines the type of flowers generated by the plant.
// water (integer) - each unit of water extends the portion of stem between the flowers. It also gives how many times the stems + flower clusters should be repeated
// fert (integer) - each unit of fertilizer increases the amount of flowers, grouped in clusters
// temp (integer) - if the temperature given is in the range of 20째C and 30째C, the plant grows normally, otherwise, all the flowers die except for one flower at the end of the stem.
// Given the above parameters, your task is to return a string representing the plant.

// Examples
// plant("@", 3, 3, 25) => "---@@@---@@@---@@@"
// # Water gives the length of the stem portions between flowers
// # Water also gives the total number of segments(number of times flowers + stems should be repeated)
// # Fertilizer gives the length of the flower clusters.
// # Temperature is in the range of 20째C and 30째C

// plant("$", 4, 2, 30) => "----$$----$$----$$----$$"

// plant("&", 1, 5, 20) => "-&&&&&"

// plant("^", 3, 3, 35) => "---------^"
// # The temperature is not in the correct range, so all flowers die, except the last one at the end.
// # The stem is not affected by the temperature

      function plant(seed, water, fert, temp){
        let string = ''
      
      if (temp >= 20 && temp <= 30){
      for (let x = 0; x<water; x++){
      for (let x = 0; x<water; x++){
        (string += '-')
      }
        
      for (let x = 0; x<fert; x++){
        (string += seed)
      }
      } 
      } else{
        for (let x = 0; x<water; x++){
        for (let x = 0; x<water; x++){
        (string += '-')
      }
      }
        string += seed
      }
      return string
      }

      //alternative 

      function plant(seed, water, fert, temp){
        return 20 <= temp && temp <= 30 ? ("-".repeat(water) + seed.repeat(fert)).repeat(water) : "-".repeat(water * water) + seed
      }
      



function Song(title, artist){
    this.title = title
    this.artist = artist
   let array = []
    this.howMany = function (x){
      let count = 0
      x.map((i) => {  
        array.includes(i.toUpperCase()) ? '' : array.push(i.toUpperCase()) && (count = count + 1)
      })
   return count
      }
  }


